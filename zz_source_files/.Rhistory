##          paste0("~/flywheel/AC_asp_detail", cur_dt, ".csv"))
x_month <- d_asp %>%
group_by(fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb),
size_jeff = "aggregate") %>%
ungroup() %>%
mutate(asp = round((arr / 12) / seats, 1)) %>%
# filter(date > "2014-01-01" & (month(date) %in% c(3, 6, 9, 12) | date == max(date))) %>%
filter(fw_month > "2012-03-01", fw_month < cur_close_month) %>%
select(size_jeff, fw_month, n, seats, arr, asp) %>%
data.frame()
x_month_segment <- d_asp %>%
group_by(fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb),
account_segment = "aggregate") %>%
ungroup() %>%
mutate(asp = round((arr / 12) / seats, 1)) %>%
# filter(date > "2014-01-01" & (month(date) %in% c(3, 6, 9, 12) | date == max(date))) %>%
filter(fw_month > "2012-03-01", fw_month < cur_close_month) %>%
select(account_segment, fw_month, n, seats, arr, asp) %>%
data.frame()
x_size_odb <- d_asp %>%
# filter(date > "2014-01-01" & (month(date) %in% c(1, 4, 7, 10) | date == max(date))) %>%
filter(fw_month > "2012-03-01", fw_month < cur_close_month) %>%
group_by(size_test, fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb)) %>%
ungroup() %>%
mutate(asp = round((arr / 12) / seats, 1)) %>%
data.frame()
##x_size_odb
x_asp_jeff <- d_asp %>%
group_by(size_jeff, fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb)) %>%
ungroup() %>%
mutate(asp = round((arr / 12) / seats, 1)) %>%
bind_rows(x_month) %>%
mutate(sized = size_jeff != "aggregate") %>%
# filter(date > "2014-01-01" & (month(date) %in% c(3, 6, 9, 12) | date == max(date))) %>%
filter(fw_month > "2012-03-01", fw_month < cur_close_month) %>%
data.frame()
##x_asp_jeff
##write_csv(x_asp_jeff,
##          paste0("~/flywheel/AC_asp_", cur_dt, ".csv"))
x_asp_segment <- d_asp %>%
group_by(account_segment, fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb)) %>%
ungroup() %>%
mutate(asp = round((arr / 12) / seats, 1)) %>%
bind_rows(x_month) %>%
mutate(sized = is.na(account_segment) != TRUE) %>%
# filter(date > "2014-01-01" & (month(date) %in% c(3, 6, 9, 12) | date == max(date))) %>%
filter(fw_month > "2012-03-01", fw_month < cur_close_month) %>%
data.frame()
##x_asp_segment
##write_csv(x_asp_segment,
##          paste0("~/flywheel/AC_asp_segment", cur_dt, ".csv"))
##d_curr_scatt <- d_asp %>% filter(fw_month == max(fw_month) & size_ue == "<1000")
##have to change to hard-coded date - max(fw_month) no longer gives current close month
d_curr_scatt <- d_asp %>% filter(fw_month == "2018-08-01" & size_ue == "<1000")
##v_curr_mean <- d_curr_scatt %>%
##summarize(asp_avg = round(sum(arr_odb / 12) / sum(seats_odb), 0))
v_curr_mean <- d_curr_scatt %>%
summarize(asp_avg = round(sum(arr_odb / 12) / sum(seats_odb), 0))
## average seat price -- plotting --------------------------------------------
# ugly
#p_month <- ggplot(x_month,
#                  aes(x = fw_month,
#                      y = asp,
#                      ymax = asp * 1.02)) +
#  geom_point(size = 5, alpha = I(3/4)) +
#  geom_line() +
#  scale_colour_manual(values = c("black", "steelblue4", "steelblue3", "steelblue2", "orangered")) +
#  scale_y_continuous(label = dollar, limits = c(10, 50)) +
#  geom_text(aes(label = paste0("$", asp)), size = 4, vjust = -3, check_overlap = TRUE) +
#  geom_text(aes(label = paste0("N=", n)), size = 4, vjust = -1.5) +
#  labs(title = "UE SaaS Average Seat Price (ASP)",
#       x = "Date",
#       y = "UE ASP") +
#  theme_bw(base_size = 24) +
#  theme(legend.position = "top")
#p_month
# also ugly
#p_size_odb <- ggplot(filter(x_size_odb,
#                            fw_month >= "2014-08-01"),
#                     aes(x = fw_month,
#                         y = asp,
#                         shape = size_test,
#                         colour = size_test,
#                         label = paste0("$", asp))) +
#  geom_point(size = 5, alpha = I(3/4)) +
#  geom_line() +
#  scale_colour_manual(values = rev(c("black", "steelblue4", "steelblue3", "steelblue2", "steelblue1", "orangered"))) +
#  scale_y_continuous(label = dollar, limits = c(10,50)) +
#  geom_text(size = 4, vjust = -1, check_overlap = TRUE) +
#  labs(title = "UE SaaS Average Seat Price (ASP), Grouped by Total Customer Size",
#       x = "Date",
#       y = "UE ASP",
#       shape = "ODB Sizes",
#       colour = "ODB Sizes") +
#  theme_bw(base_size = 20) +
#  theme(legend.position = "top")
#p_size_odb
#ggsave("~/flywheel/exhibits/ASP2.png", p_size_odb, width = w, height = h, units = "mm")
p_asp_jeff <- ggplot(x_asp_jeff,
aes(x = fw_month,
y = asp,
ymax = asp * 1.04,
shape = size_jeff,
linetype = size_jeff,
colour = size_jeff)) +
# label = paste0("$", asp, ", N=", n))) +
geom_point(size = 3, alpha = I(2/3)) +
geom_line(alpha = I(2/3)) +
scale_colour_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "black")) +
scale_y_continuous(label = dollar, limits = c(10, 50)) +
geom_text(data = filter(x_asp_jeff, fw_month == min(fw_month) | fw_month == max(fw_month)),
aes(label = paste0("$", asp)),
size = 3,
vjust = -1,
check_overlap = TRUE) +
# geom_text(aes(label = paste0("N=", n)), size = 3, vjust = -1.5) +
labs(title = "UE SaaS Average Seat Price (ASP), Grouped by Total Customer Size",
x = "Date",
y = "UE ASP",
shape = "Seat Size Category",
linetype = "Seat Size Category",
colour = "Seat Size Category") +
theme_bw(base_size = 20) +
theme(legend.position = "top") +
facet_grid(sized ~ ., labeller = label_both)
p_asp_jeff
ggsave("~/flywheel/exhibits/ASP.png", p_asp_jeff, width = w, height = h, units = "mm")
##not discussed in metrics meeting
p_curr_scatt <- ggplot(d_curr_scatt,
aes(x = seats_odb,
y = asp_x_id)) +
geom_jitter(position = position_jitter(width = .5),
size = 7,
alpha = I(1/3)) +
geom_hline(yintercept = v_curr_mean[1,1],
linetype = 2) +
geom_smooth(method = "lm") +
scale_y_continuous(label = dollar) +
annotate("text",
x = 800,
y = v_curr_mean[1,1] + 1,
label = paste0("Segment Mean ASP: $", v_curr_mean[1,1])) +
labs(x = "UE Seats",
y = "UE ASP",
title = "UE ASP in the 100-1000 Seat Segment") +
theme_bw(base_size = 24)
p_curr_scatt
############################################################################################################
## SEGMENTATION ANALYSIS charting for on-prem reporting -- must rerun d_fw with filter on for on_prem only ---------------------
## be careful -- am changing charting parameters for different data set
## must rerun all of flywheel code but with only on-prem activity passing through filter
##CAREFUL - RUN NEXT SECTION OF CODE ONLY IF LOOKING AT ON-PREM --- !!!!!!!!!!
##AD HOC - to filter to On-Prem/Perpetual/etc
d_fw_bind_op <- d_fw_bind %>%
filter(sku_onprem == 1)
d_fw_op <- d_fw_bind_op %>%
group_by(odbid, fw_month) %>%
summarize(arr_odb = sum(arr_odb),
seats_odb = sum(seats_odb)) %>%
data.frame()
#to export this
write_csv(d_fw_op,
paste0("~/flywheel/tables/d_fw_odbID_op", cur_dt, ".csv"))
d_csm_op <- d_fw_op %>%
mutate(csm_size = factor(ifelse(seats_odb < 50, "<50",
ifelse(seats_odb < 100, "50-99",
ifelse(seats_odb < 500, "100-499",
ifelse(seats_odb < 1000, "500-999", ">=1000")))),
levels = c("<50", "50-99", "100-499", "500-999", ">=1000")))
x_op <- d_csm_op %>%
group_by(csm_size, fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb)/1000000) %>%
filter(fw_month > fw_start_date)
data.frame()
p_csm_op <- ggplot(x_op,
aes(x = fw_month,
y = n,
ymax = 0,
shape = csm_size,
linetype = csm_size,
colour = csm_size)) +
# label = paste0("$", asp, ", N=", n))) +
geom_point(size = 3, alpha = I(2/3)) +
geom_line(alpha = I(2/3)) +
scale_colour_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "black")) +
scale_y_continuous(label = comma, limits = c(0, 50)) +
geom_text(data = filter(x_op, fw_month == min(fw_month) | fw_month == max(fw_month)),
aes(label = n),
size = 3,
vjust = -1,
check_overlap = TRUE) +
##geom_text(aes(label = paste0("N=", n)), size = 3, vjust = -1.5) +
labs(title = "Number of On-Prem Customers, Grouped by Total Customer Size",
x = "Date",
y = "Count") +
theme_bw(base_size = 20) +
theme(legend.position = "top")
p_csm_op
ggsave("~/flywheel/exhibits/p_csm_op.png", p_csm_op, width = w, height = h, units = "mm")
p_csm_size_op <- ggplot(x_op,
aes(x = fw_month,
y = arr,
ymax = 0,
shape = csm_size,
linetype = csm_size,
colour = csm_size)) +
# label = paste0("$", asp, ", N=", n))) +
geom_point(size = 3, alpha = I(2/3)) +
geom_line(alpha = I(2/3)) +
scale_colour_manual(values = c("steelblue1", "steelblue2", "steelblue3", "steelblue4", "black")) +
scale_y_log10(labels = NULL) +
geom_text(data = filter(x_op, fw_month == min(fw_month) | fw_month == max(fw_month)),
aes(label = rnd2(arr)),
size = 3,
vjust = -1,
check_overlap = TRUE) +
##geom_text(aes(label = paste0("N=", n)), size = 3, vjust = -1.5) +
labs(title = "On-Prem Total ARR Under Contract by Customer Size",
x = "Date",
y = "ARR (M)") +
theme_bw(base_size = 20) +
theme(legend.position = "top")
p_csm_size_op
ggsave("~/flywheel/exhibits/p_csm_size_op.png", p_csm_size_op, width = w, height = h, units = "mm")
d_segment_op <- d_fw_bind_op %>%
group_by(account_segment, odbid, fw_month) %>%
summarize(arr_odb = sum(arr_odb),
seats_odb = sum(seats_odb)) %>%
data.frame()
x_segment_op <- d_segment_op %>%
group_by(account_segment, fw_month) %>%
summarize(n = n_distinct(odbid),
seats = sum(seats_odb),
arr = sum(arr_odb)/1000000) %>%
filter(fw_month > fw_start_date)
data.frame()
p_segment_cust_op <- ggplot(x_segment_op,
aes(x = fw_month,
y = n,
ymax = 0,
shape = account_segment,
linetype = account_segment,
colour = account_segment)) +
# label = paste0("$", asp, ", N=", n))) +
geom_point(size = 3, alpha = I(2/3)) +
geom_line(alpha = I(2/3)) +
scale_shape_manual(values = 7:10) +
scale_color_manual(values = c("darkgreen", "blue", "black", "red")) +
scale_y_continuous(label = comma, limits = c(0, 50)) +
geom_text(data = filter(x_segment_op, fw_month == min(fw_month) | fw_month == max(fw_month)),
aes(label = n),
size = 3,
vjust = -1,
check_overlap = TRUE) +
##geom_text(aes(label = n), size = 3, vjust = -1.5) +
labs(title = "Number of On-Prem Customers, Grouped by Account Segment",
x = "Date",
y = "Count") +
theme_bw(base_size = 20) +
theme(legend.position = "top")
p_segment_cust_op
ggsave("~/flywheel/exhibits/segment_customers_op.png", p_segment_cust_op, width = w, height = h, units = "mm")
p_segment_seats_op <- ggplot(x_segment_op,
aes(x = fw_month,
y = seats/1000,
ymax = 0,
shape = account_segment,
linetype = account_segment,
colour = account_segment)) +
# label = paste0("$", asp, ", N=", n))) +
geom_point(size = 3, alpha = I(2/3)) +
geom_line(alpha = I(2/3)) +
scale_shape_manual(values = 7:10) +
scale_color_manual(values = c("darkgreen", "blue", "black", "red")) +
scale_y_continuous(label = comma, limits = c(0, 30)) +
geom_text(data = filter(x_segment_op, fw_month == min(fw_month) | fw_month == max(fw_month)),
aes(label = rnd0(seats/1000)),
size = 3,
vjust = -1,
check_overlap = TRUE) +
##geom_text(aes(label = n), size = 3, vjust = -1.5) +
labs(title = "Number of Seats ('000) On-Prem Customers, Grouped by Account Segment",
x = "Date",
y = "Count") +
theme_bw(base_size = 20) +
theme(legend.position = "top")
p_segment_seats_op
ggsave("~/flywheel/exhibits/segment_seats_op.png", p_segment_seats_op, width = w, height = h, units = "mm")
p_segment_arr_op <- ggplot(x_segment_op,
aes(x = fw_month,
y = arr,
ymax = 0,
shape = account_segment,
linetype = account_segment,
colour = account_segment)) +
# label = paste0("$", asp, ", N=", n))) +
geom_point(size = 3, alpha = I(2/3)) +
geom_line(alpha = I(2/3)) +
scale_shape_manual(values = 7:10) +
scale_color_manual(values = c("darkgreen", "blue", "black", "red")) +
scale_y_continuous(label = comma, limits = c(0, 5)) +
geom_text(data = filter(x_segment_op, fw_month == min(fw_month) | fw_month == max(fw_month)),
aes(label = rnd1(arr)),
size = 3,
vjust = -1,
check_overlap = TRUE) +
##geom_text(aes(label = n), size = 3, vjust = -1.5) +
labs(title = "Total ARR (millions) On-Prem Customers, Grouped by Account Segment",
x = "Date",
y = "Count") +
theme_bw(base_size = 20) +
theme(legend.position = "top")
p_segment_arr_op
ggsave("~/flywheel/exhibits/segment_arr_op.png", p_segment_arr_op, width = w, height = h, units = "mm")
x_month_op <- d_fw_op %>%
filter(fw_month >= fw_start_date) %>%
group_by(fw_month) %>%
summarize(arr = sum(arr_odb),
paidseats = sum(seats_odb),
customers = n_distinct(odbid),
seats10 = sum(seats_odb >= 10),
seats100 = sum(seats_odb >= 100),
seats1000 = sum(seats_odb >= 1000)) %>%
mutate(lagged_seats = lag(paidseats, lg),
lagged_seats_delta = paidseats - lagged_seats,
yoy_seats = rnd3((paidseats - lagged_seats) / lagged_seats),
yoy_arr = rnd3((arr - lag(arr, lg)) / lag(arr, lg)),
yoy_customers = rnd3((customers - lag(customers, lg)) / lag(customers, lg))) %>%
data.frame()
##WK edit changed fwid to odbid, date to fw_month, and in summarize arr to arr_odb and seats to seats_odb
#to export this
##write_csv(x_month_op,
##          paste0("~/flywheel/x_month_op", cur_dt, ".csv"))
##  using tidyr to re-organize data for improved charting
x_gath_op <- x_month_op %>%
mutate(arr_m = rnd2(arr / 10^6),
seats_k = rnd2(paidseats / 10^3)) %>%
filter(!is.na(yoy_seats)) %>%
gather(key = measure, value = y_val, -fw_month)
#to export this
##write_csv(x_gath_op,
##          paste0("~/flywheel/x_gath_op", cur_dt, ".csv"))
##  things that recur to clean-up:
fw_mx_dt <- max(d_fw$fw_month)
##WK edit - changed date to fw_month
year_seq <- seq(from = fw_start_date, ##need to manually update this each new FY
to = fy0,
by = "year")
cum_fy <- year_seq %>%
map_df(~ data_frame(x = .,
y = seq(from = .,
to = . + months(12),
by = "months")
)
)
cum_fy <- cum_fy[cum_fy$y <= fw_mx_dt,]
x_fy_op <- map2_df(cum_fy$x, cum_fy$y, ~ fx_calc_churn_NEW(d_fw_op, .x, .y, "fw_month"))
##  minor wrangling to get the fiscal year labels right and add month labels
##  note last year's last month is the first (month 0) of current
x_fy_op <- x_fy_op %>%
filter(!is.na(end_dt)) %>%
arrange(start_dt, end_dt) %>%
mutate(fy = factor(year(start_dt + months(12)),
levels = 2019:2014)) %>%
group_by(fy) %>%
mutate(month = row_number() - 1) %>%
data.frame()
p_facet_op <- ggplot(x_gath_op %>%
filter(measure %in% c("arr_m", "seats_k", "customers")) %>%
mutate(measure = my_lvls(measure, c("customers", "arr_m", "seats_k"))),
aes(x = fw_month,
y = y_val,
ymax = y_val * 1.05,
label = rnd0(y_val))) +
geom_line(colour = col1) +
geom_vline(xintercept = as.numeric(as.Date("2015-05-01")), linetype = 4, colour = "blue") +
geom_vline(xintercept = as.numeric(as.Date("2016-10-01")), linetype = 4, colour = "blue") +
geom_point(size = sz,
colour = col1,
alpha = I(3/4)) +
geom_text(size = 3, vjust = -1, check_overlap = TRUE) +
labs(title = "On-Prem (Perpetual & Subscription) Customers, ARR, and Seats",
x = "Month",
y = "Aggregate",
shape = "Measure",
fill = "Measure",
colour = "Measure",
linetype = "Measure") +
facet_grid(measure ~ ., scales = "free") +
mytheme
p_facet_op
ggsave("~/flywheel/exhibits/p_facet_op.png", p_facet_op, width = w, height = h, units = "mm")
p_churn_arr_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "churn_arr",
y_lab = "Cumulative ARR Churn (%)",
t_lab = "Retaining:  On-Prem Cumulative CA Fiscal Year ARR Churn",
label_format = "percent") +
geom_hline(yintercept = 0.1, linetype = 2) +
scale_y_continuous(labels = percent) +
mytheme
p_churn_arr_fym_op
ggsave("~/flywheel/exhibits/p_churn_arr_fyms_op.png", p_churn_arr_fym_op, width = w, height = h, units = "mm")
x_12m_date_size_op <- map_df(month_seq, ~ fx_calc_churn_NEW(d_fw_op, .x, .x + months(12), "fw_month", "size_cat"))
x_12m_date_size_op <- x_12m_date_size_op %>%
filter(end_dt < cur_close_month, end_dt >= fw_start_date, is.na(size_cat) == FALSE)
p_churn_arr_size_op <- fx_plot_monthly(df = x_12m_date_size_op,
y_val = "churn_arr",
z_val = "size_cat",
x_lab = "Date",
y_lab = "Churn (%)",
t_lab = "Retaining:  On-Prem 12 Month ARR Churn by Size Segment",
label_format = "percent") +
geom_hline(yintercept = 0.1, linetype = 2) +
geom_vline(xintercept = as.numeric(as.Date("2015-05-01")), linetype = 4, colour = "blue") +
geom_vline(xintercept = as.numeric(as.Date("2016-10-01")), linetype = 4, colour = "blue") +
scale_y_continuous(labels = percent) +
mytheme
p_churn_arr_size_op
ggsave("~/flywheel/exhibits/p_churn_arr_size_op.png", p_churn_arr_size_op, width = w, height = h, units = "mm")
p_net_arr_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "net_renew_arr",
y_lab = "Cumulative ARR New Renew Rate (%)",
t_lab = "Expanding:  On-Prem Cumulative ARR Net Renew Rate",
label_format = "percent") +
geom_hline(yintercept = 1, linetype = 2) +
scale_y_continuous(labels = percent) +
mytheme
p_net_arr_fym_op
ggsave("~/flywheel/exhibits/p_net_arr_fym_op.png", p_net_arr_fym_op, width = w, height = h, units = "mm")
p_lost_arr_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "agg_arr_lost",
y_lab = "Cumulative ARR Lost (millions)",
t_lab = "Retaining:  Cumulative ARR Lost",
label_format = "dollar") +
scale_y_continuous(labels = dollar) +
mytheme
p_lost_arr_fym_op
ggsave("~/flywheel/exhibits/p_lost_arr_fym_op.png", p_lost_arr_fym_op, width = w, height = h, units = "mm")
##customers lost in aggregate
p_lost_cust_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "cust_term",
y_lab = "Cumulative Customers Lost",
t_lab = "Retaining:  Cumulative Customers Lost",
label_format = "seats") +
##scale_y_continuous(labels = cscale) +
mytheme
p_lost_cust_fym_op
ggsave("~/flywheel/exhibits/p_lost_cust_fym_op.png", p_lost_cust_fym_op, width = w, height = h, units = "mm")
p_gross_add_arr_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "p_arr_xpand",
y_lab = "Cumulative ARR Expansion Rate (%)",
t_lab = "Expanding:  Cumulative ARR Gross Expansion Rate",
label_format = "percent") +
scale_y_continuous(labels = percent) +
mytheme
p_gross_add_arr_fym_op
ggsave("~/flywheel/exhibits/p_gross_add_arr_fym_op.png", p_gross_add_arr_fym_op, width = w, height = h, units = "mm")
## expanding customer count
p_gross_add_cust_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "cust_xpand",
y_lab = "Cumulative Number of Customers Expanding",
t_lab = "Expanding:  Cumulative Number of Customers Expanding",
label_format = "seats") +
##scale_y_continuous(labels = cscale) +
mytheme
p_gross_add_cust_fym_op
ggsave("~/flywheel/exhibits/p_gross_add_cust_fym_op.png", p_gross_add_cust_fym_op, width = w, height = h, units = "mm")
## expanding customer count - percentage - cumulative
p_gross_add_cust_perc_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "p_cust_xpand",
y_lab = "Cumulative Percentage of Customers Expanding",
t_lab = "Expanding:  Cumulative Percentage of Customers Expanding",
label_format = "percent") +
scale_y_continuous(labels = percent) +
mytheme
p_gross_add_cust_perc_fym_op
ggsave("~/flywheel/exhibits/p_gross_add_cust_perc_fym_op.png", p_gross_add_cust_perc_fym_op, width = w, height = h, units = "mm")
p_landing_customers_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "cust_land",
y_lab = "Customers",
t_lab = "Landing:  Cumulative New Customers",
label_format = "seats") +
mytheme
p_landing_customers_fym_op
ggsave("~/flywheel/exhibits/p_landing_customers_fym_op.png", p_landing_customers_fym_op, width = w, height = h, units = "mm")
##  landing arr from customers new to the cohort
p_landing_arr_fym_op <- fx_plot_fy(df = x_fy_op,
y_val = "agg_arr_land",
y_lab = "ARR (millions)",
t_lab = "Landing:  Cumulative New Customer ARR",
label_format = "dollar") +
scale_y_continuous(label = dollar) +
mytheme
p_landing_arr_fym_op
ggsave("~/flywheel/exhibits/p_landing_arr_fym_op.png", p_landing_arr_fym_op, width = w, height = h, units = "mm")
